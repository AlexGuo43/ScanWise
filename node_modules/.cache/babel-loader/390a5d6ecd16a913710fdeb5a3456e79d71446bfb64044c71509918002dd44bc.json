{"ast":null,"code":"var _jsxFileName = \"/Users/danielrolfe/Documents/GitHub/ScanWise/src/components/HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '../Section.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeScreen({\n  onNavigate\n}) {\n  _s();\n  const [imageSrc, setImageSrc] = useState(null); // State to hold captured image\n  const [isCameraActive, setIsCameraActive] = useState(false); // State to track camera visibility\n  const videoRef = useRef(null); // Ref for the video element\n\n  // Start the user's camera\n  const handleCameraClick = () => {\n    // Activate camera and show video feed\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      setIsCameraActive(true); // Show the video feed\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }).catch(error => {\n      console.error('Error accessing the camera:', error);\n    });\n  };\n\n  // Capture an image from the video stream\n  const handleCapture = () => {\n    const video = videoRef.current;\n    if (video && video.srcObject) {\n      // Create a canvas to draw the captured frame\n      const canvas = document.createElement('canvas');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const capturedImage = canvas.toDataURL('image/png'); // Convert to image data\n      setImageSrc(capturedImage); // Update state with captured image\n\n      // Send the captured image to the back end\n      sendImageToBackend(capturedImage);\n\n      // Stop the video stream only if it exists\n      if (video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      setIsCameraActive(false); // Hide the video feed\n    } else {\n      console.error('Video element or video stream is not available.');\n    }\n  };\n  const sendImageToBackend = async imageData => {\n    try {\n      const response = await fetch('https://your-backend-url.com/upload', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image: imageData\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Image successfully uploaded:', data);\n      } else {\n        console.error('Failed to upload image:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section home-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        alt: \"Scanwise AI Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-icon-placeholder\",\n        onClick: handleCameraClick,\n        children: [!imageSrc && !isCameraActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to Access Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), isCameraActive && /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            position: 'absolute',\n            // Make the video cover the box\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            // Cover the container while maintaining aspect ratio\n            borderRadius: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageSrc,\n          alt: \"Captured\",\n          style: {\n            width: '100%',\n            height: '100%',\n            borderRadius: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), isCameraActive && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCapture,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scan-btn\",\n        onClick: () => onNavigate('safe'),\n        children: \"Go to Safe Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeScreen, \"UgsAXXwvUPTXg7DFp8KVel5OXhc=\");\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","HomeScreen","onNavigate","_s","imageSrc","setImageSrc","isCameraActive","setIsCameraActive","videoRef","handleCameraClick","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","error","console","handleCapture","canvas","document","createElement","width","videoWidth","height","videoHeight","context","getContext","drawImage","capturedImage","toDataURL","sendImageToBackend","getTracks","forEach","track","stop","imageData","response","fetch","method","headers","body","JSON","stringify","image","ok","data","json","log","statusText","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","style","position","top","left","objectFit","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["/Users/danielrolfe/Documents/GitHub/ScanWise/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport '../Section.css';\n\nfunction HomeScreen({ onNavigate }) {\n  const [imageSrc, setImageSrc] = useState(null); // State to hold captured image\n  const [isCameraActive, setIsCameraActive] = useState(false); // State to track camera visibility\n  const videoRef = useRef(null); // Ref for the video element\n\n  // Start the user's camera\n  const handleCameraClick = () => {\n    // Activate camera and show video feed\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        setIsCameraActive(true); // Show the video feed\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      })\n      .catch((error) => {\n        console.error('Error accessing the camera:', error);\n      });\n  };\n\n  // Capture an image from the video stream\n  const handleCapture = () => {\n    const video = videoRef.current;\n    if (video && video.srcObject) {\n      // Create a canvas to draw the captured frame\n      const canvas = document.createElement('canvas');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const capturedImage = canvas.toDataURL('image/png'); // Convert to image data\n      setImageSrc(capturedImage); // Update state with captured image\n\n      // Send the captured image to the back end\n      sendImageToBackend(capturedImage);\n\n      // Stop the video stream only if it exists\n      if (video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n\n      setIsCameraActive(false); // Hide the video feed\n    } else {\n      console.error('Video element or video stream is not available.');\n    }\n  };\n\n  const sendImageToBackend = async (imageData) => {\n    try {\n      const response = await fetch('https://your-backend-url.com/upload', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ image: imageData }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Image successfully uploaded:', data);\n      } else {\n        console.error('Failed to upload image:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  return (\n    <div className=\"section home-screen\">\n      <div className=\"logo\">\n        <img src=\"/logo.png\" alt=\"Scanwise AI Logo\" />\n      </div>\n      <div className=\"content\">\n        {/* Placeholder or captured image */}\n        <div className=\"camera-icon-placeholder\" onClick={handleCameraClick}>\n          {!imageSrc && !isCameraActive && (\n            <p>Click to Access Camera</p>\n          )}\n          {/* Video element for live feed, shown only when the camera is active */}\n          {isCameraActive && (\n            <video\n              ref={videoRef}\n              autoPlay\n              playsInline\n              style={{\n                position: 'absolute',  // Make the video cover the box\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover',  // Cover the container while maintaining aspect ratio\n                borderRadius: '10px',\n              }}\n            ></video>\n          )}\n          {/* Show captured image if available */}\n          {imageSrc && (\n            <img\n              src={imageSrc}\n              alt=\"Captured\"\n              style={{ width: '100%', height: '100%', borderRadius: '10px' }}\n            />\n          )}\n        </div>\n        {/* Capture Button */}\n        {isCameraActive && (\n          <button onClick={handleCapture} style={{ marginTop: '10px' }}>Capture Image</button>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button className=\"scan-btn\" onClick={() => onNavigate('safe')}>Go to Safe Screen</button>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}